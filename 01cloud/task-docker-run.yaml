apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: docker-run
spec:
  workspaces:
    - name: workspace
  params:
    - name: dockerfile
      description: Content of Dockerfile
      default: dockerfile
      type: string
    - name: dockerignore
      description: Content of Docker Ignore
      default: ".git"
      type: string 
    - name: docker_user
      description: Docker User
      default: "umesh1212"
      type: string
    - name: docker_token
      description: Docker dockerToken  
      default: ""
      type: string
    - name: docker_service
      description: Path to service
      default: "docker.io"
      type: string
    - name: base_image
      description: Path to base image
      default: base image
      type: string 
    - name: base_tag
      description: Path to base tag
      default: base tag
      type: string
    - name: destination
      description: Destination path
      default: umesh1212/drupal-test123
  steps:
    - name: build
      image: docker
      env:
        - name: "DOCKER_USER"
          value: "$(params.docker_user)"
        - name: "DOCKER_TOKEN"
          value: "$(params.docker_token)"
        - name: "DOCKER_SERVICE"
          value: "$(params.docker_service)"
        - name: DOCKER_FILE
          value: "$(params.dockerfile)"
        - name: DOCKER_IGNORE
          value: "$(params.dockerignore)"
        - name: DOCKER_URL
          value: "$(params.destination)"
        - name: BASE_IMAGE
          value: "$(params.base_image)"
        - name: BASE_TAG
          value: "$(params.base_tag)"
      script: |
        #!/bin/sh
        cd /workspace/workspace/
        until docker ps; do sleep 3; done;
        #echo "$(params.dockerfile)" > Dockerfile;
        echo "$DOCKER_FILE" | base64 -d > Dockerfile;
        if [[ ! -z "$DOCKER_IGNORE" ]] && [[ ! -f ".dockerignore" ]]; then echo "${DOCKER_IGNORE}" > .dockerignore; fi
        docker build . -t "${DOCKER_URL}" || exit 1
        echo "Successfully built"
      volumeMounts:
      - mountPath: /var/run/
        name: dind-socket
      - mountPath: /var/lib/docker
        name: dind-storage
    - name: push
      image: docker
      env:
        - name: "DOCKER_USER"
          value: "$(params.docker_user)"
        - name: "DOCKER_TOKEN"
          value: "$(params.docker_token)"
        - name: "DOCKER_SERVICE"
          value: "$(params.docker_service)"
        - name: DOCKER_FILE
          value: "$(params.dockerfile)"
        - name: DOCKER_IGNORE
          value: "$(params.dockerignore)"
        - name: DOCKER_URL
          value: "$(params.destination)"
        - name: BASE_IMAGE
          value: "$(params.base_image)"
        - name: BASE_TAG
          value: "$(params.base_tag)"
      script: |
        #!/bin/sh
        cd /workspace/workspace/
        until docker ps; do sleep 3; done;
        docker login -u "${DOCKER_USER}" -p "${DOCKER_TOKEN}" "${DOCKER_SERVICE}" 2>/dev/null || exit 1
        docker push "${DOCKER_URL}" || exit 1
        echo "Successfully pushed"
      volumeMounts:
      - mountPath: /var/run/
        name: dind-socket
      - mountPath: /var/lib/docker
        name: dind-storage
  sidecars:
    - image: docker:20.10-dind
      name: server
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/docker
          name: dind-storage
        - mountPath: /var/run/
          name: dind-socket
  volumes:
    - name: dind-storage
      emptyDir: {}
    - name: dind-socket
      emptyDir: {}